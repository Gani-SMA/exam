import nodemailer from 'nodemailer';\nimport { logger } from './logger';\n\ninterface EmailOptions {\n  to: string;\n  subject: string;\n  template: string;\n  data: any;\n  attachments?: {\n    filename: string;\n    path?: string;\n    content?: Buffer;\n    contentType?: string;\n  }[];\n}\n\n// Create transporter\nconst createTransporter = () => {\n  return nodemailer.createTransporter({\n    host: process.env.SMTP_HOST,\n    port: parseInt(process.env.SMTP_PORT || '587'),\n    secure: process.env.SMTP_PORT === '465', // true for 465, false for other ports\n    auth: {\n      user: process.env.SMTP_USER,\n      pass: process.env.SMTP_PASS\n    },\n    tls: {\n      rejectUnauthorized: false\n    }\n  });\n};\n\n// Email templates\nconst emailTemplates = {\n  emailVerification: (data: any) => ({\n    subject: 'Verify Your Email - Examination Platform',\n    html: `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Email Verification</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }\n          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }\n          .button { display: inline-block; background: #667eea; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Welcome to Examination Platform!</h1>\n          </div>\n          <div class=\"content\">\n            <h2>Hi ${data.firstName},</h2>\n            <p>Thank you for registering with our Examination Platform. To complete your registration and start taking exams, please verify your email address.</p>\n            <p>Click the button below to verify your email:</p>\n            <a href=\"${data.verificationUrl}\" class=\"button\">Verify Email Address</a>\n            <p>If the button doesn't work, you can copy and paste this link into your browser:</p>\n            <p><a href=\"${data.verificationUrl}\">${data.verificationUrl}</a></p>\n            <p>This verification link will expire in 24 hours for security reasons.</p>\n            <p>If you didn't create an account with us, please ignore this email.</p>\n            <p>Best regards,<br>The Examination Platform Team</p>\n          </div>\n          <div class=\"footer\">\n            <p>¬© 2024 Examination Platform. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `,\n    text: `\n      Hi ${data.firstName},\n      \n      Thank you for registering with our Examination Platform. To complete your registration, please verify your email address by clicking the link below:\n      \n      ${data.verificationUrl}\n      \n      This verification link will expire in 24 hours.\n      \n      If you didn't create an account with us, please ignore this email.\n      \n      Best regards,\n      The Examination Platform Team\n    `\n  }),\n\n  passwordReset: (data: any) => ({\n    subject: 'Password Reset - Examination Platform',\n    html: `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Password Reset</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }\n          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }\n          .button { display: inline-block; background: #ff6b6b; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .warning { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 20px 0; }\n          .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>Password Reset Request</h1>\n          </div>\n          <div class=\"content\">\n            <h2>Hi ${data.firstName},</h2>\n            <p>We received a request to reset your password for your Examination Platform account.</p>\n            <p>Click the button below to reset your password:</p>\n            <a href=\"${data.resetUrl}\" class=\"button\">Reset Password</a>\n            <p>If the button doesn't work, you can copy and paste this link into your browser:</p>\n            <p><a href=\"${data.resetUrl}\">${data.resetUrl}</a></p>\n            <div class=\"warning\">\n              <strong>Important:</strong> This password reset link will expire in ${data.expiresIn}. If you don't reset your password within this time, you'll need to request a new reset link.\n            </div>\n            <p>If you didn't request a password reset, please ignore this email. Your password will remain unchanged.</p>\n            <p>For security reasons, we recommend:</p>\n            <ul>\n              <li>Using a strong, unique password</li>\n              <li>Not sharing your password with anyone</li>\n              <li>Enabling two-factor authentication</li>\n            </ul>\n            <p>Best regards,<br>The Examination Platform Team</p>\n          </div>\n          <div class=\"footer\">\n            <p>¬© 2024 Examination Platform. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `,\n    text: `\n      Hi ${data.firstName},\n      \n      We received a request to reset your password for your Examination Platform account.\n      \n      Click the link below to reset your password:\n      ${data.resetUrl}\n      \n      This password reset link will expire in ${data.expiresIn}.\n      \n      If you didn't request a password reset, please ignore this email.\n      \n      Best regards,\n      The Examination Platform Team\n    `\n  }),\n\n  examReminder: (data: any) => ({\n    subject: `Exam Reminder: ${data.examTitle}`,\n    html: `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Exam Reminder</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }\n          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }\n          .exam-details { background: white; padding: 20px; border-radius: 5px; margin: 20px 0; border-left: 4px solid #4ecdc4; }\n          .button { display: inline-block; background: #4ecdc4; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>üìö Exam Reminder</h1>\n          </div>\n          <div class=\"content\">\n            <h2>Hi ${data.firstName},</h2>\n            <p>This is a friendly reminder about your upcoming exam:</p>\n            <div class=\"exam-details\">\n              <h3>${data.examTitle}</h3>\n              <p><strong>Date:</strong> ${data.examDate}</p>\n              <p><strong>Time:</strong> ${data.examTime}</p>\n              <p><strong>Duration:</strong> ${data.duration} minutes</p>\n              <p><strong>Type:</strong> ${data.examType}</p>\n              ${data.description ? `<p><strong>Description:</strong> ${data.description}</p>` : ''}\n            </div>\n            <p>Make sure you're prepared:</p>\n            <ul>\n              <li>Review your study materials</li>\n              <li>Ensure stable internet connection</li>\n              <li>Find a quiet environment</li>\n              <li>Have necessary materials ready</li>\n            </ul>\n            <a href=\"${data.examUrl}\" class=\"button\">Go to Exam</a>\n            <p>Good luck with your exam!</p>\n            <p>Best regards,<br>The Examination Platform Team</p>\n          </div>\n          <div class=\"footer\">\n            <p>¬© 2024 Examination Platform. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `,\n    text: `\n      Hi ${data.firstName},\n      \n      This is a reminder about your upcoming exam:\n      \n      ${data.examTitle}\n      Date: ${data.examDate}\n      Time: ${data.examTime}\n      Duration: ${data.duration} minutes\n      \n      Make sure you're prepared and have a stable internet connection.\n      \n      Exam URL: ${data.examUrl}\n      \n      Good luck!\n      \n      Best regards,\n      The Examination Platform Team\n    `\n  }),\n\n  achievementUnlocked: (data: any) => ({\n    subject: `üèÜ Achievement Unlocked: ${data.achievementName}`,\n    html: `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Achievement Unlocked</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }\n          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }\n          .achievement { background: white; padding: 25px; border-radius: 10px; margin: 20px 0; text-align: center; border: 2px solid #f093fb; }\n          .achievement-icon { font-size: 48px; margin-bottom: 15px; }\n          .button { display: inline-block; background: #f093fb; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>üéâ Congratulations!</h1>\n          </div>\n          <div class=\"content\">\n            <h2>Hi ${data.firstName},</h2>\n            <p>You've unlocked a new achievement!</p>\n            <div class=\"achievement\">\n              <div class=\"achievement-icon\">${data.achievementIcon}</div>\n              <h3>${data.achievementName}</h3>\n              <p>${data.achievementDescription}</p>\n              <p><strong>XP Earned:</strong> +${data.xpEarned}</p>\n              ${data.badgeEarned ? `<p><strong>Badge Earned:</strong> ${data.badgeEarned}</p>` : ''}\n            </div>\n            <p>Keep up the great work! Your dedication to learning is paying off.</p>\n            <a href=\"${data.profileUrl}\" class=\"button\">View Your Profile</a>\n            <p>Continue your learning journey and unlock more achievements!</p>\n            <p>Best regards,<br>The Examination Platform Team</p>\n          </div>\n          <div class=\"footer\">\n            <p>¬© 2024 Examination Platform. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `,\n    text: `\n      Hi ${data.firstName},\n      \n      Congratulations! You've unlocked a new achievement:\n      \n      ${data.achievementName}\n      ${data.achievementDescription}\n      \n      XP Earned: +${data.xpEarned}\n      ${data.badgeEarned ? `Badge Earned: ${data.badgeEarned}` : ''}\n      \n      Keep up the great work!\n      \n      View your profile: ${data.profileUrl}\n      \n      Best regards,\n      The Examination Platform Team\n    `\n  }),\n\n  weeklyReport: (data: any) => ({\n    subject: 'Your Weekly Learning Report',\n    html: `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Weekly Report</title>\n        <style>\n          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n          .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }\n          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }\n          .stats { display: flex; justify-content: space-between; margin: 20px 0; }\n          .stat-item { background: white; padding: 20px; border-radius: 5px; text-align: center; flex: 1; margin: 0 5px; }\n          .stat-number { font-size: 24px; font-weight: bold; color: #667eea; }\n          .button { display: inline-block; background: #667eea; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }\n          .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <h1>üìä Your Weekly Report</h1>\n          </div>\n          <div class=\"content\">\n            <h2>Hi ${data.firstName},</h2>\n            <p>Here's your learning progress for the week of ${data.weekRange}:</p>\n            <div class=\"stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">${data.examsCompleted}</div>\n                <div>Exams Completed</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">${data.averageScore}%</div>\n                <div>Average Score</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">${data.studyTime}</div>\n                <div>Study Time (hrs)</div>\n              </div>\n            </div>\n            <h3>Highlights:</h3>\n            <ul>\n              ${data.highlights.map((highlight: string) => `<li>${highlight}</li>`).join('')}\n            </ul>\n            ${data.recommendations ? `\n              <h3>Recommendations:</h3>\n              <ul>\n                ${data.recommendations.map((rec: string) => `<li>${rec}</li>`).join('')}\n              </ul>\n            ` : ''}\n            <a href=\"${data.dashboardUrl}\" class=\"button\">View Full Dashboard</a>\n            <p>Keep up the excellent work!</p>\n            <p>Best regards,<br>The Examination Platform Team</p>\n          </div>\n          <div class=\"footer\">\n            <p>¬© 2024 Examination Platform. All rights reserved.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `,\n    text: `\n      Hi ${data.firstName},\n      \n      Here's your learning progress for the week of ${data.weekRange}:\n      \n      Exams Completed: ${data.examsCompleted}\n      Average Score: ${data.averageScore}%\n      Study Time: ${data.studyTime} hours\n      \n      Highlights:\n      ${data.highlights.map((highlight: string) => `- ${highlight}`).join('\\n')}\n      \n      ${data.recommendations ? `Recommendations:\\n${data.recommendations.map((rec: string) => `- ${rec}`).join('\\n')}` : ''}\n      \n      View your full dashboard: ${data.dashboardUrl}\n      \n      Keep up the excellent work!\n      \n      Best regards,\n      The Examination Platform Team\n    `\n  })\n};\n\n// Send email function\nexport const sendEmail = async (options: EmailOptions): Promise<void> => {\n  try {\n    const transporter = createTransporter();\n    \n    // Get template\n    const template = emailTemplates[options.template as keyof typeof emailTemplates];\n    if (!template) {\n      throw new Error(`Email template '${options.template}' not found`);\n    }\n    \n    const { subject, html, text } = template(options.data);\n    \n    const mailOptions = {\n      from: `\"Examination Platform\" <${process.env.EMAIL_FROM}>`,\n      to: options.to,\n      subject: options.subject || subject,\n      html,\n      text,\n      attachments: options.attachments\n    };\n    \n    const info = await transporter.sendMail(mailOptions);\n    \n    logger.info('Email sent successfully', {\n      to: options.to,\n      subject: mailOptions.subject,\n      messageId: info.messageId,\n      template: options.template\n    });\n  } catch (error) {\n    logger.error('Failed to send email', {\n      to: options.to,\n      subject: options.subject,\n      template: options.template,\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n    throw error;\n  }\n};\n\n// Send bulk emails\nexport const sendBulkEmails = async (emails: EmailOptions[]): Promise<void> => {\n  const transporter = createTransporter();\n  \n  const promises = emails.map(async (emailOptions) => {\n    try {\n      await sendEmail(emailOptions);\n      return { success: true, email: emailOptions.to };\n    } catch (error) {\n      logger.error('Failed to send bulk email', {\n        to: emailOptions.to,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      });\n      return { success: false, email: emailOptions.to, error };\n    }\n  });\n  \n  const results = await Promise.allSettled(promises);\n  \n  const successful = results.filter(result => \n    result.status === 'fulfilled' && result.value.success\n  ).length;\n  \n  const failed = results.length - successful;\n  \n  logger.info('Bulk email sending completed', {\n    total: emails.length,\n    successful,\n    failed\n  });\n};\n\n// Verify email configuration\nexport const verifyEmailConfig = async (): Promise<boolean> => {\n  try {\n    const transporter = createTransporter();\n    await transporter.verify();\n    logger.info('Email configuration verified successfully');\n    return true;\n  } catch (error) {\n    logger.error('Email configuration verification failed', {\n      error: error instanceof Error ? error.message : 'Unknown error'\n    });\n    return false;\n  }\n};"